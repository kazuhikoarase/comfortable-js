{"version":3,"sources":["core/default-cell-renderer-factory.js","core/event-target.js","core/i18n.js","core/i18n/en.js","core/i18n/ja.js","core/list.js","core/num-util.js","core/style.js","core/table.js","core/ui.js","core/util.js","template-support/default-header-cell-renderer-factory.js","template-support/template-support.js","vue-support/vue-support.js"],"names":[],"mappingshCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACljhhxbjofile":"comfortable.js","sourcesContent":["//\n// comfortable - default-cell-renderer-factory\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  var createTextEditor = function(opts) {\n    var util = $c.util;\n    return {\n      $el : util.createElement('input', {\n        attrs : { type : 'text', 'class' : '${prefix}-editor' }\n      }),\n      beginEdit : function(td, cell) {\n        var cs = window.getComputedStyle(td.$el, null);\n        var opts = {\n            props : {},\n            style : {\n              textAlign : cs.textAlign,\n              verticalAlign : cs.verticalAlign,\n              color : cs.color,\n              backgroundColor : cs.backgroundColor,\n              fontFamily : cs.fontFamily,\n              fontSize : cs.fontSize,\n              fontWeight : cs.fontWeight\n            }\n          };\n        if (typeof cell.maxLength == 'number') {\n          opts.props.maxLength = cell.maxLength;\n        }\n        util.set(this.$el, opts);\n      },\n      focus : function() {\n        this.$el.focus();\n        this.$el.select();\n      },\n      blur : function() {\n        this.$el.blur();\n      },\n      setValue : function(value) {\n        this.$el.value = value;\n        this.valueType = typeof value;\n      },\n      getValue : function() {\n        if (opts.dataType == 'number') {\n          var value = $c.numUtil.format(\n              $c.numUtil.toNarrow(this.$el.value),\n              opts.decimalDigits, '');\n          return this.valueType == 'number'? +value : value;\n        }\n        return this.$el.value;\n      },\n      isValid : function(editor) {\n        if (opts.dataType == 'number') {\n          return !!$c.numUtil.toNarrow(this.getValue() ).match($c.numUtil.re);\n        }\n        return true;\n      }\n    };\n  };\n\n  var createCheckBox = function(opts) {\n    var util = $c.util;\n    return {\n      $el : util.createElement('input', {\n        attrs : { type : 'checkbox', 'class' : '${prefix}-editor' }\n      }),\n      beginEdit : function(td, cell) {\n        var cs = window.getComputedStyle(td.$el, null);\n        util.set(this.$el, {\n          style : {\n          }\n        });\n      },\n      focus : function() {\n        this.$el.focus();\n      },\n      blur : function() {\n        this.$el.blur();\n      },\n      setValue : function(value) {\n        this.$el.checked = value;\n      },\n      getValue : function() {\n        return this.$el.checked;\n      },\n      isValid : function(editor) {\n        return true;\n      }\n    };\n  };\n\n  var createSelectBox = function(opts) {\n    var util = $c.util;\n    var select = util.createElement('select', {\n      attrs : { 'class' : '${prefix}-editor' }\n    });\n    return {\n      $el : select,\n      beginEdit : function(td, cell) {\n        var cs = window.getComputedStyle(td.$el, null);\n        util.set(this.$el, {\n          style : {\n            textAlign : cs.textAlign,\n            verticalAlign : cs.verticalAlign,\n            color : cs.color,\n            backgroundColor : cs.backgroundColor,\n            fontFamily : cs.fontFamily,\n            fontSize : cs.fontSize,\n            fontWeight : cs.fontWeight\n          }\n        });\n        var options = getOptions(cell);\n        while (select.childNodes.length < options.length) {\n          select.appendChild(util.createElement('option') );\n        }\n        var labelField = cell.labelField || 'label';\n        var valueField = cell.valueField || 'value';\n        var i = 0;\n        for (; i < options.length; i += 1) {\n          var option = options[i];\n          util.set(select.childNodes[i], {\n            style : { display : '' },\n            props : { textContent : option[labelField],\n              value : option[valueField] }\n          });\n        }\n        while (select.childNodes.length > options.length) {\n          select.removeChild(select.lastChild);\n        }\n        // IE9 does not support style.display=none.\n        /*\n        for (;i < select.childNodes.length; i += 1) {\n          select.childNodes[i].style.display = 'none';\n        }\n        */\n      },\n      focus : function() {\n        this.$el.focus();\n      },\n      blur : function() {\n        this.$el.blur();\n      },\n      setValue : function(value) {\n        this.$el.value = value;\n      },\n      getValue : function() {\n        return this.$el.value;\n      },\n      isValid : function(editor) {\n        return true;\n      }\n    };\n  };\n\n  var getOptions = function(cell) {\n    var options = cell.options;\n    if (typeof options == 'function') {\n      options = options(cell.row, cell.col);\n    }\n    return options || [];\n  };\n\n  var createDefaultCellRendererFactoryOpts = function() {\n    return {\n      // value to label\n      labelFunction : function(value, cell) {\n        if (value === null || typeof value == 'undefined') {\n          return '';\n        } else if (this.dataType == 'number') {\n          return $c.numUtil.format(value, this.decimalDigits);\n        } else if (this.dataType == 'select-one') {\n          var options = getOptions(cell);\n          if (typeof options.splice != 'function') {\n            return options[value] || '';\n          }\n          var labelField = cell.labelField || 'label';\n          var valueField = cell.valueField || 'value';\n          for (var i = 0; i < options.length; i += 1) {\n            var option = options[i];\n            if (option[valueField] == value) {\n              return option[labelField];\n            }\n          }\n          return '';\n        } else {\n          return '' + value;\n        }\n      },\n      // create a editor\n      createEditor : function() {\n        if (this.dataType == 'select-one') {\n          return createSelectBox(this);\n        } else if (this.dataType == 'boolean') {\n          return createCheckBox(this);\n        }\n        return createTextEditor(this);\n      }\n    };\n  };\n\n  var createDefaultCellRendererFactory = function(opts) {\n\n    opts = $c.util.extend($c.createDefaultCellRendererFactoryOpts(), opts || {});\n\n    return function(td) {\n\n      var labelRenderer = createMultiLineLabelRenderer(td.$el);\n      var editor = null;\n      var oldValue = null;\n\n      var beginEdit = function(cell) {\n        if (editor == null) {\n          editor = opts.createEditor();\n          td.$el.appendChild(editor.$el);\n        }\n        labelRenderer.setVisible(false);\n        editor.beginEdit(td, cell);\n        editor.$el.style.display = '';\n        editor.setValue(oldValue = cell.value);\n      };\n\n      var renderIsEditor = opts.renderIsEditor;\n      if (typeof renderIsEditor == 'undefined') {\n        renderIsEditor = opts.dataType == 'boolean' ||\n          opts.dataType == 'select-one';\n      }\n\n      return {\n        render : function(cell) {\n          if (!renderIsEditor) {\n            labelRenderer.setLabel(opts.labelFunction(cell.value, cell) );\n            if (opts.dataType == 'number') {\n              td.$el.style.textAlign = 'right';\n            }\n          } else {\n            beginEdit(cell);\n          }\n        },\n        beginEdit : function(cell) {\n          beginEdit(cell);\n          return {\n            focus : function() {\n              editor.focus();\n            },\n            endEdit : function() {\n              if (!renderIsEditor) {\n                labelRenderer.setVisible(true);\n                editor.$el.style.display = 'none';\n              } else {\n                editor.blur();\n              }\n              return { oldValue : oldValue,\n                newValue : editor.isValid()? editor.getValue() : oldValue };\n            }\n          };\n        },\n        dispose : function() {\n        }\n      };\n    };\n  };\n\n  var linesRe = /\\r?\\n/g;\n  var createMultiLineLabelRenderer = function(parent) {\n    var elms = null;\n    return {\n      setLabel : function(label) {\n        if (elms == null) {\n          elms = [ document.createElement('span') ];\n          parent.appendChild(elms[0]);\n        }\n        var lines = label.split(linesRe);\n        elms[0].textContent = lines[0];\n        var elmIndex = 1;\n        for (var i = 1; i < lines.length; i += 1) {\n          if (elmIndex + 1 >= elms.length) {\n            elms.push(document.createElement('br') );\n            elms.push(document.createElement('span') );\n            parent.appendChild(elms[elmIndex]);\n            parent.appendChild(elms[elmIndex + 1]);\n          }\n          elms[elmIndex].style.display = '';\n          elms[elmIndex + 1].style.display = '';\n          elms[elmIndex + 1].textContent = lines[i];\n          elmIndex += 2;\n        }\n        for (; elmIndex < elms.length; elmIndex += 1) {\n          elms[elmIndex].style.display = 'none';\n        }\n      },\n      setVisible : function(visible) {\n        if (elms != null) {\n          for (var i = 0; i < elms.length; i += 1) {\n            elms[i].style.display = visible? '' : 'none';\n          }\n        }\n      }\n    };\n  };\n\n  $c.createDefaultCellRendererFactoryOpts = createDefaultCellRendererFactoryOpts;\n  $c.createDefaultCellRendererFactory = createDefaultCellRendererFactory;\n  $c.createMultiLineLabelRenderer = createMultiLineLabelRenderer;\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - event-target\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  var createEventTarget = function() {\n    var map = {};\n    var listeners = function(type) { return map[type] || (map[type] = []); };\n    return {\n      trigger : function(type, detail) {\n        var ctx = this;\n        listeners(type).forEach(function(listener) {\n          listener.call(ctx, { type : type }, detail);\n        });\n        return this;\n      },\n      on : function(type, listener) {\n        listeners(type).push(listener);\n        return this;\n      },\n      off : function(type, listener) {\n        map[type] = listeners(type).filter(function(l) {\n          return listener != l;\n        });\n        return this;\n      }\n    };\n  };\n\n  var createUIEventTarget = function() {\n    return $c.util.extend(createEventTarget(), {\n      valid : true,\n      invalidate : function() {\n        this.valid = false;\n        $c.util.callLater(function() {\n          if (!this.valid) {\n            this.valid = true;\n            this.render();\n          }\n        }.bind(this) );\n      },\n      render : function() {\n      }\n    });\n  };\n\n  $c.createEventTarget = createEventTarget;\n  $c.createUIEventTarget = createUIEventTarget;\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - i18n\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  var getInstance = function(lang) {\n    lang = lang || navigator.language || navigator.userLanguage;\n    return $c.util.extend({}, $c.i18n.en, $c.i18n[lang] ||\n        $c.i18n[lang.replace(/\\-\\w+$/, '')] || {});\n  };\n\n  var getMessages = function() {\n    return $c.util.extend(\n        this.getInstance('en').messages,\n        this.getInstance().messages);\n  };\n\n  $c.i18n = $c.i18n || {};\n  $c.i18n.getInstance = getInstance;\n  $c.i18n.getMessages = getMessages;\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - i18n - en\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  ($c.i18n = $c.i18n || {}).en = {\n    messages : {\n      RESET_FILTER : 'Clear Sort and Filters',\n      EDIT_COLUMNS : 'Column Visibility and Order',\n      SORT_ASC : 'Sort Ascending',\n      SORT_DESC : 'Sort Descending',\n      APPLY : 'Apply',\n      OK : 'OK',\n      CANCEL : 'Cancel',\n      RESET : 'Reset',\n      LOCK_COLUMN : '< Lock Column >',\n      SELECT_BLANK : '(Space)',\n      SELECT_ALL : '(Select All)'\n    }\n  };\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - i18n - ja\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  ($c.i18n = $c.i18n || {}).ja = {\n    messages : {\n      RESET_FILTER : '並び替えとフィルタをクリア',\n      EDIT_COLUMNS : '列の表示と順序',\n      SORT_ASC : '昇順',\n      SORT_DESC : '降順',\n      APPLY : '適用',\n      OK : 'OK',\n      CANCEL : 'キャンセル',\n      RESET : '初期値に戻す',\n      LOCK_COLUMN : '< 列固定位置 >',\n      SELECT_BLANK : '(空白)',\n      SELECT_ALL : '(全て選択)'\n    }\n  };\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - list\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  var createList = function() {\n\n    var util = $c.util;\n\n    var listContent = util.createElement('div', {\n      style : { position : 'absolute' } });\n    var list = { $el :  util.createElement('div', {\n      style : { position : 'absolute',\n        overflow : 'hidden', whiteSpace:'nowrap' } }, [ listContent ]) };\n\n    var scr = util.createElement('div', {\n      style : { position : 'absolute' } });\n\n    var viewPane = util.createElement('div', {\n        style : { position : 'absolute',\n          overflowX : 'hidden', overflowY : 'auto' },\n        on : { scroll : function(event) { $public.render(); } }\n      }, [scr]);\n  \n    var frame = util.createElement('div', {\n        style : { position : 'relative', overflow : 'hidden',\n          width : '100px', height : '100px' },\n        on : {\n          wheel : function(event) {\n            viewPane.scrollLeft += event.deltaX;\n            viewPane.scrollTop += event.deltaY;\n          }\n        } },[ viewPane, list.$el ]);\n\n    var cells = [];\n    var getOrCrt = function(index) {\n      if (index < cells.length) {\n        return cells[index];\n      }\n      var cell = $public.createCell();\n      listContent.appendChild(cell.$el);\n      cells.push(cell);\n      return cell;\n    };\n\n    var $public = util.extend($c.createUIEventTarget(), {\n      $el : frame,\n      getItemAt : function(index) { return 'item' + index; },\n      getItemCount : function() { return 100000; },\n      createCell : function() {\n        return { $el : $c.util.createElement('div', {\n          props : { textContent : 'M' },\n          style : { borderBottom : '1px solid silver' }\n        }) };\n      },\n      renderCell : function(cell, item) {\n        cell.$el.textContent = item;\n      },\n      cellHeight : -1,\n      render : function() {\n\n        util.set(viewPane, { style : {\n          left : '0px', top : '0px',\n          width : this.$el.offsetWidth + 'px',\n          height : this.$el.offsetHeight + 'px'\n        } });\n\n        if (this.cellHeight == -1) {\n          this.cellHeight = getOrCrt(0).$el.offsetHeight;\n        }\n        var viewHeight = this.cellHeight * this.getItemCount();\n        var scrHeight = Math.min(viewHeight, 1E6);\n\n        var listTop = -(scrHeight > viewPane.clientHeight?\n            util.translate(viewPane.scrollTop,\n            0, scrHeight - viewPane.clientHeight,\n            0, viewHeight - viewPane.clientHeight,\n            'list.top') : 0);\n\n        var minRow = Math.floor(-listTop / this.cellHeight);\n        var maxRow = Math.min(this.getItemCount() - 1,\n            Math.floor( (-listTop + viewPane.clientHeight) / this.cellHeight) );\n        var top = listTop + minRow * this.cellHeight;\n\n        util.set(listContent, { style : { left : '0px', top : top + 'px' } });\n\n        var cellIndex = 0;\n        for (var row = minRow; row <= maxRow; row += 1) {\n          var cell = getOrCrt(cellIndex);\n          cell.row = row;\n          cell.$el.style.display = '';\n          this.renderCell(cell, this.getItemAt(row) );\n          cellIndex += 1;\n        }\n        for (; cellIndex < cells.length; cellIndex += 1) {\n          cells[cellIndex].$el.style.display = 'none';\n        }\n\n        util.set(scr, { style : {\n          left : '0px', top : '0px',\n          width : this.$el.offsetWidth + 'px',\n          height : scrHeight + 'px'\n        } });\n\n        util.set(list.$el, { style : {\n          whiteSpace : 'nowrap',\n          width : viewPane.clientWidth + 'px',\n          height : viewPane.clientHeight + 'px'\n        } });\n\n        this.trigger('rendered', {\n          listState : { minRow : minRow, maxRow : maxRow } } );\n      }\n    });\n\n    return $public;\n  };\n\n  $c.createList = createList;\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - num-util\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  var numUtil = {\n    re : /^([\\+\\-]?)([0-9]*)(\\.[0-9]*)?$/,\n    format : function(value, digits, s1, s2) {\n      digits = digits || 0;\n      s1 = typeof s1 == 'string'? s1 : ',';\n      s2 = typeof s2 == 'string'? s2 : '.';\n      if (typeof value == 'number') {\n        value = '' + value;\n      }\n      if (typeof value != 'string') {\n        return '';\n      }\n      var mat = value.match(this.re);\n      if (mat) {\n        if (mat[2].length == 0 && (!mat[3] || mat[3].length == 1) ) {\n          return '';\n        }\n        var iPart = mat[2].length > 0? mat[2] : '0';\n        while (iPart.length > 1 && iPart.charAt(0) == '0') {\n          iPart = iPart.substring(1);\n        }\n        var neg = mat[1] == '-';\n        var s = '';\n        while (iPart.length > 3) {\n          s = s1 + iPart.substring(iPart.length - 3) + s;\n          iPart = iPart.substring(0, iPart.length - 3);\n        }\n        s = iPart + s;\n        if (digits > 0) {\n          var fPart = mat[3] || s2;\n          s += s2;\n          for (var i = 0; i < digits; i += 1) {\n            s += (i + 1 < fPart.length)? fPart[i + 1] : '0';\n          }\n        }\n        return neg? '-' + s : s;\n      }\n      return value;\n    },\n    toNarrow : function() {\n      var wide = '０１２３４５６７８９＋－．，';\n      var narrow = '0123456789+-.,';\n      if (wide.length != narrow.length) {\n        throw wide + ',' + narrow;\n      }\n      return function(value) {\n        var s = '';\n        for (var i = 0; i < value.length; i += 1) {\n          var c = value.charAt(i);\n          var index = wide.indexOf(c);\n          s += (index != -1)? narrow.charAt(index) : c;\n        }\n        return s;\n      };\n    }()\n  };\n\n  $c.numUtil = numUtil;\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - style\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  $c.classNamePrefix = 'ctj';\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - table\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  var createDefaultTableModel = function() {\n    var util = $c.util;\n    return util.extend($c.createEventTarget(), {\n      defaultCellWidth : 100,\n      defaultCellHeight : 28,\n      defaultCellStyle : { rowSpan : 1, colSpan : 1, editable : true },\n      defaultCellRendererFactory : $c.createDefaultCellRendererFactory(),\n      maxRowSpan : 8,\n      maxColSpan : 8,\n      minCellWidth : 8,\n      getRowCount : function() { return 1E5; },\n      getColumnCount : function() { return 1E5; },\n      getLineRowAt : function(row) { return row; },\n      getLineRowCountAt : function(row) { return this.getRowCount(); },\n      getValueAt : function(row, col) { return row + ',' + col; },\n      getCellStyleAt : function(row, col) { return {}; },\n      getCellRendererFactoryAt : function(row, col) { return this.defaultCellRendererFactory; },\n      getCellWidthAt : function(col) { return this.defaultCellWidth; },\n      getCellHeightAt : function(row) { return this.defaultCellHeight; },\n      getCellAt : function(row, col) {\n        return util.extend({\n            row : row, col : col, value : this.getValueAt(row, col) },\n            this.defaultCellStyle, this.getCellStyleAt(row, col) );\n      },\n      checkSpaned : function(row, col) {\n        var minRow = Math.max(0, row - this.maxRowSpan);\n        var minCol = Math.max(0, col - this.maxColSpan);\n        for (var r = row; r >= minRow; r -= 1) {\n          for (var c = col; c >= minCol; c -= 1) {\n            if (r != row || c != col) {\n              var cell = this.getCellAt(r, c);\n              if (row < r + cell.rowSpan && col < c + cell.colSpan) {\n                return { row : r, col : c };\n              }\n            }\n          }\n        }\n        return null;\n      },\n      isColumnResizableAt : function(col) { return true; },\n      isColumnDraggableAt : function(col) { return true; }\n    } );\n  };\n\n  var createInternalTable = function() {\n\n    var util = $c.util;\n\n    var colgroup = util.createElement('colgroup');\n    var tbody = util.createElement('tbody');\n\n    var table = util.createElement('table', {\n        attrs : { cellspacing : '0' },\n        style : {\n          tableLayout : 'fixed', position : 'absolute', lineHeight : 1\n        }\n      }, [ colgroup, tbody ]);\n    var view = util.createElement('div', {\n      style : { overflow : 'hidden', position : 'relative' },\n      on : { scroll : function(event) {\n        view.scrollLeft = 0; view.scrollTop = 0; } }\n    }, [ table ]);\n\n    var getOrCrt = function(tagName, index, parent, init) {\n      if (parent.children && index < parent.children.length) {\n        return parent.children[index];\n      }\n      if (!parent.children) {\n        parent.children = [];\n      }\n      var elm = { $el : document.createElement(tagName) };\n      if (init) {\n        init(elm);\n      }\n      parent.$el.appendChild(elm.$el);\n      parent.children.push(elm);\n      return elm;\n    };\n\n    var createTableState = function() {\n      return {\n        left : 0, top : 0, width : 0, height : 0,\n        minRow : 0, maxRow : 0, minCol : 0, maxCol : 0,\n        indexById : {}\n      };\n    };\n\n    var getCellStyle = function(cell) {\n      return {\n        attrs : { 'class' : cell.className },\n        style : {\n          textAlign : cell.textAlign,\n          verticalAlign : cell.verticalAlign,\n          color : cell.color,\n          backgroundColor : cell.backgroundColor,\n          fontWeight : cell.fontWeight,\n          borderLeft : cell.borderLeft,\n          borderRight : cell.borderRight,\n          borderTop : cell.borderTop,\n          borderBottom : cell.borderBottom\n        }\n      };\n    };\n\n    return {\n\n      $el : view,\n      colgroup : { $el : colgroup },\n      tbody : { $el : tbody },\n      left : 0, top : 0, model : null,\n      tableState : createTableState(),\n\n      offsetCache : null,\n      beforeCellSizeChangeHandler : null,\n      calcCellPosition : function(left, top) {\n\n        var tableModel = this.model;\n\n        // offset cache\n        if (this.beforeCellSizeChangeHandler == null) {\n          this.beforeCellSizeChangeHandler = function(event, detail) {\n            this.offsetCache = null;\n          }.bind(this);\n        }\n        tableModel.off('beforecellsizechange', this.beforeCellSizeChangeHandler);\n        tableModel.on('beforecellsizechange', this.beforeCellSizeChangeHandler);\n        this.offsetCache = this.offsetCache || { left : {}, top : {} };\n        var prec = 1000;\n        var offsetLeftCache = this.offsetCache.left;\n        var offsetTopCache = this.offsetCache.top;\n        var offsetLeft = 0;\n        var offsetTop = 0;\n\n        var rowCount = tableModel.getRowCount();\n        var columnCount = tableModel.getColumnCount();\n        var cellWidth = 0;\n        var cellHeight = 0;\n        var col = 0;\n        var row = 0;\n\n        var leftCache = null;\n        var topCache = null;\n        for (var i = 0; typeof offsetLeftCache[i] == 'number'; i += prec) {\n          if (left + offsetLeftCache[i] <= 0) {\n            leftCache = { col : i, offset : offsetLeftCache[i] };\n          }\n        }\n        for (var i = 0; typeof offsetTopCache[i] == 'number'; i += prec) {\n          if (top + offsetTopCache[i] <= 0) {\n            topCache = { row : i, offset : offsetTopCache[i] };\n          }\n        }\n        if (leftCache) {\n          col = leftCache.col;\n          left += leftCache.offset;\n          offsetLeft += leftCache.offset;\n        }\n        if (topCache) {\n          row = topCache.row;\n          top += topCache.offset;\n          offsetTop += topCache.offset;\n        }\n\n        for (; col < columnCount; col += 1,\n            left += cellWidth, offsetLeft += cellWidth) {\n          if (col % prec == 0) {\n            offsetLeftCache[col] = offsetLeft;\n          }\n          cellWidth = tableModel.getCellWidthAt(col);\n          if (left + cellWidth <= 0) {\n            continue;\n          }\n          break;\n        }\n        for (; row < rowCount; row += 1,\n            top += cellHeight, offsetTop += cellHeight) {\n          if (row % prec == 0) {\n            offsetTopCache[row] = offsetTop;\n          }\n          cellHeight = tableModel.getCellHeightAt(row);\n          if (top + cellHeight <= 0) {\n            continue;\n          }\n          break;\n        }\n        if (row < rowCount && col < columnCount) {\n          var spaned = tableModel.checkSpaned(row, col);\n          if (spaned) {\n            while (row > spaned.row) {\n              row -= 1;\n              top -= tableModel.getCellHeightAt(row);\n            }\n            while (col > spaned.col) {\n              col -= 1;\n              left -= tableModel.getCellWidthAt(col);\n            }\n          }\n        }\n        return { left : left, col : col, top : top, row : row };\n      },\n\n      preRender : function() {\n\n        var width = this.$el.offsetWidth;\n        var height = this.$el.offsetHeight;\n        var rowCount = this.model.getRowCount();\n        var columnCount = this.model.getColumnCount();\n\n        var cellPos = this.calcCellPosition(this.left, this.top);\n\n        var tableState = createTableState();\n        tableState.top = cellPos.top;\n        tableState.minRow = cellPos.row;\n        tableState.left = cellPos.left;\n        tableState.minCol = cellPos.col;\n\n        var top = cellPos.top;\n        var row = cellPos.row;\n        var trIndex = 0;\n        while (row < rowCount && top < height) {\n          var cellHeight = this.model.getCellHeightAt(row);\n          getOrCrt('tr', trIndex, this.tbody).\n            $el.style.height = cellHeight + 'px';\n          tableState.height += cellHeight;\n          top += cellHeight;\n          row += 1;\n          trIndex += 1;\n        }\n        for (;trIndex < tbody.childNodes.length; trIndex += 1) {\n          tbody.childNodes[trIndex].style.height = '0px';\n        }\n        tableState.maxRow = Math.min(rowCount, tableState.minRow +\n            (this.tbody.children? this.tbody.children.length : 0) ) - 1;\n\n        var left = cellPos.left;\n        var col = cellPos.col;\n        var colIndex = 0;\n        while (col < columnCount && left < width) {\n          var cellWidth = this.model.getCellWidthAt(col);\n          getOrCrt('col', colIndex, this.colgroup).\n            $el.style.width = cellWidth + 'px';\n          tableState.width += cellWidth;\n          left += cellWidth;\n          col += 1;\n          colIndex += 1;\n        }\n        for (;colIndex < colgroup.childNodes.length; colIndex += 1) {\n          colgroup.childNodes[colIndex].style.width = '0px';\n        }\n        tableState.maxCol = Math.min(columnCount, tableState.minCol +\n            (this.colgroup.children? this.colgroup.children.length : 0) ) - 1;\n\n        return tableState;\n      },\n\n      render : function() {\n\n        var tableState = this.preRender();\n        var spaned = {};\n\n        var setSpaned = function(row, col, td, cell) {\n          td.rowSpan = cell.rowSpan;\n          td.colSpan = cell.colSpan;\n          if (cell.rowSpan == 1 && cell.colSpan == 1) {\n            return;\n          }\n          for (var r = 0; r < cell.rowSpan; r += 1) {\n            for (var c = 0; c < cell.colSpan; c += 1) {\n              if (r != 0 || c != 0) {\n                var id = util.getCellId(row + r, col + c);\n                spaned[id] = true;\n              }\n            }\n          }\n        };\n\n        var tableModel = this.model;\n        var initCell = function(td) {\n          td.renderer = null;\n          td.tableModel = tableModel;\n          td.$el.style.overflow = 'hidden';\n          td.$el.style.whiteSpace = 'nowrap';\n        };\n\n        for (var row = tableState.minRow; row <= tableState.maxRow; row += 1) {\n\n          var trIndex = row - tableState.minRow;\n          var tr = this.tbody.children[trIndex];\n\n          var tdIndex = 0;\n          for (var col = tableState.minCol; col <= tableState.maxCol; col += 1) {\n\n            var id = util.getCellId(row, col);\n            if (spaned[id]) {\n              continue;\n            }\n            tableState.indexById[id] = { trIndex : trIndex, tdIndex : tdIndex };\n\n            var td = getOrCrt('td', tdIndex, tr, initCell);\n            td.row = row;\n            td.col = col;\n\n            var cell = tableModel.getCellAt(row, col);\n            setSpaned(row, col, td.$el, cell);\n\n            var factory = tableModel.getCellRendererFactoryAt(row, col);\n            if (td.factory != factory) {\n              td.factory = factory;\n              if (td.renderer) {\n                td.renderer.dispose();\n              }\n              td.$el.innerHTML = '';\n              td.renderer = td.factory(td);\n            }\n\n            util.set(td.$el, getCellStyle(cell) );\n            td.renderer.render(cell);\n\n            tdIndex += 1;\n          }\n        }\n\n        util.extend(table.style, {\n          left : tableState.left + 'px',\n          top : tableState.top + 'px',\n          width : tableState.width + 'px',\n          height : tableState.height + 'px'\n        });\n\n        this.tableState = tableState;\n      }\n    };\n  };\n\n  var createTable = function() {\n\n    var util = $c.util;\n\n    var tables = function() {\n      var tables = [];\n      for (var i = 0; i < 4; i += 1) {\n        tables.push(createInternalTable() );\n      }\n      return tables;\n    }();\n\n    tables.forEach(function(table, i) {\n      table.row = ~~(i / 2);\n      table.col = i % 2;\n      var cellEventHandler = function(handler) {\n        return function(event) {\n          var col = util.indexOf(util.closest(event.target,\n              { tagName : 'TD', root : table.$el }) );\n          var row = util.indexOf(util.closest(event.target,\n              { tagName : 'TR', root : table.$el }) );\n          if (col != -1 && row != -1) {\n            handler(event, table.tbody.children[row].children[col]);\n          }\n        };\n      };\n      var delegateHandler = cellEventHandler(function(event, td) {\n        $public.trigger(event.type,\n            { originalEvent : event, row : td.row, col : td.col }); });\n      var delegates = {};\n      $c.tableEventTypes.forEach(function(type) {\n        delegates[type] = delegateHandler;\n      });\n      util.set(table.$el, {\n        on : delegates\n      });\n      util.set(table.$el, {\n        style : { position : 'absolute' },\n        on : {\n          mousedown: cellEventHandler(function(event, td) {\n            if (event.which != 1) {\n              return;\n            }\n            if (td.row < $public.getLockRow() &&\n                $public.model.isColumnDraggableAt(td.col) &&\n                !event.defaultPrevented) {\n              event.preventDefault();\n              var mousemoveHandler = function(event) {\n                updateMarker(event.pageX - dragPoint.x);\n              };\n              var mouseupHandler = function(event) {\n                util.$(document).off('mousemove', mousemoveHandler).\n                  off('mouseup', mouseupHandler);\n                frame.removeChild(dragProxy);\n                frame.removeChild(marker);\n                if (targetColumn != null) {\n                  tableModel.trigger('columndragged', {\n                    colFrom : targetColumn.colFrom,\n                    colSpan : cell.colSpan,\n                    colTo : targetColumn.colTo });\n                  $public.invalidate();\n                }\n              };\n              util.$(document).on('mousemove', mousemoveHandler).\n                on('mouseup', mouseupHandler);\n              var getTargetColumn = function(centerX) {\n                var targetColumn = null;\n                tables.forEach(function(tbl, i) {\n                  if (tbl.row == table.row) {\n                    var tableState = tbl.tableState;\n                    var rect = $private.getCellSizeCache().rects[i];\n                    var left = rect.left + tableState.left;\n                    for (var col = tableState.minCol; col <= tableState.maxCol; col += 1) {\n                      var distance = Math.abs(left - centerX);\n                      if ( (targetColumn == null ||\n                              distance < targetColumn.distance) &&\n                            !tableModel.checkSpaned(0, col) ) {\n                        targetColumn = { colFrom : colFrom, colTo : col,\n                            i : i, left : left, distance : distance };\n                      }\n                      left += tableModel.getCellWidthAt(col);\n                    }\n                  }\n                });\n                return targetColumn;\n              };\n              var updateMarker = function(delta) {\n                var left = getLeft(delta);\n                targetColumn = getTargetColumn(left + colWidth / 2);\n                dragProxy.style.left = left + 'px';\n                marker.style.left = (targetColumn.left - markerStyle.gap - 1) + 'px';\n              };\n              var tableModel = $public.model;\n              var tableState = table.tableState;\n              var targetColumn = null;\n              var rect = $private.getCellSizeCache().rects[i];\n              var colFrom = td.col;\n              var spaned = tableModel.checkSpaned(0, colFrom);\n              if (spaned) {\n                colFrom = spaned.col;\n              }\n              var cell = tableModel.getCellAt(0, colFrom);\n              var colLeft = function() {\n                var left = 0;\n                for (var col = tableState.minCol; col < colFrom; col += 1) {\n                  left += tableModel.getCellWidthAt(col);\n                }\n                return left;\n              }();\n              var colWidth = function() {\n                var width = 0;\n                for (var col = 0; col < cell.colSpan; col += 1) {\n                  width += tableModel.getCellWidthAt(colFrom + col);\n                }\n                return width;\n              }();\n              var getLeft = function(delta) {\n                return tableState.left + rect.left + colLeft + delta;\n              };\n              var dragPoint = { x : event.pageX, y : event.pageY };\n              var dragProxy = util.createElement('div', {\n                attrs : { 'class' : '${prefix}-column-drag-proxy' },\n                style : { position : 'absolute', top : '0px',\n                  width : colWidth + 'px',\n                  height : rect.height + 'px' }\n              });\n              var markerStyle = { gap : 2 };\n              var marker = util.createElement('div', {\n                attrs : { 'class' : '${prefix}-column-drag-marker' },\n                style : { position : 'absolute', top : '0px',\n                  width : (markerStyle.gap * 2 + 1) + 'px',\n                  height : rect.height + 'px' }\n              });\n              updateMarker(0);\n              frame.appendChild(dragProxy);\n              frame.appendChild(marker);\n              return;\n            }\n            // begin edit by logical row and col\n            if (editor.cell != null &&\n                editor.cell.row == td.row &&\n                editor.cell.col == td.col) {\n            } else if ($private.isEditableAt(td.row, td.col) ) {\n              event.preventDefault();\n              editor.beginEdit(td.row, td.col, true);\n            }\n          })\n        }\n      } );\n    });\n\n    var scr = util.createElement('div', {\n        style : { position : 'absolute' } });\n\n    var viewPane = util.createElement('div', {\n        style : { position : 'absolute', overflow : 'auto' },\n        on : { scroll : function(event) { $public.render(); } }\n      }, [scr]);\n\n    var frame = util.createElement('div', {\n        style : { position : 'relative', overflow : 'hidden',\n          width : '400px', height : '200px' },\n        on : {\n          mousedown : function(event) {\n            if (util.closest(event.target, { $el : viewPane, root : frame }) ) {\n              editor.endEdit();\n              $public.render();\n            }\n          },\n          keydown : function(event) {\n            switch(event.keyCode) {\n            case 9 : // Tab\n              event.preventDefault();\n              $private.move({ row : 0, col : event.shiftKey? -1 : 1 });\n              break;\n            case 13 : // Enter\n              event.preventDefault();\n              $private.move({ row : event.shiftKey? -1 : 1, col : 0 });\n              break;\n            }\n          },\n          wheel : function(event) {\n            viewPane.scrollLeft += event.deltaX;\n            viewPane.scrollTop += event.deltaY;\n          }\n        }\n      }, [viewPane].concat(\n          tables.map(function(table) { return table.$el; }) ) );\n\n    var lockLines = [];\n    var colResizeHandles = [];\n\n    var $private = {\n      getCellRect : function(row, col) {\n        var tableModel = tables[3].model;\n        var left = 0;\n        var top = 0;\n        for (var r = 0; r < row; r += 1) {\n          top += tableModel.getCellHeightAt(r);\n        }\n        for (var c = 0; c < col; c += 1) {\n          left += tableModel.getCellWidthAt(c);\n        }\n        return { left : left, top : top,\n          width : tableModel.getCellWidthAt(col),\n          height : tableModel.getCellHeightAt(row) };\n      },\n      makeVisible : function(renderParams, row, col) {\n        var cornerRect = renderParams.rects[0];\n        var scrollRect = renderParams.rects[3];\n        var delta = { left : 0, top : 0 };\n        var cellRect = this.getCellRect(row, col);\n        var left = cellRect.left + tables[3].left;\n        var top = cellRect.top + tables[3].top;\n        if (left < 0) {\n          delta.left = left;\n        } else if (left + cellRect.width > scrollRect.width) {\n          delta.left = left + cellRect.width - scrollRect.width;\n        }\n        if (top < 0) {\n          delta.top = top;\n        } else if (top + cellRect.height > scrollRect.height) {\n          delta.top = top + cellRect.height - scrollRect.height;\n        }\n        var scroll = {\n          left : renderParams.viewWidth > viewPane.clientWidth?\n              util.translate(-tables[3].left + delta.left,\n              cornerRect.width,\n              cornerRect.width + renderParams.viewWidth - viewPane.clientWidth,\n              0, renderParams.scrWidth - viewPane.clientWidth, 'scroll.left') : 0,\n          top : renderParams.viewHeight > viewPane.clientHeight?\n              util.translate(-tables[3].top + delta.top,\n              cornerRect.height,\n              cornerRect.height + renderParams.viewHeight - viewPane.clientHeight,\n              0, renderParams.scrHeight - viewPane.clientHeight, 'scroll.top') : 0\n        };\n        if (row >= $public.getLockRow() ) {\n          viewPane.scrollTop = scroll.top;\n        }\n        if (col >= $public.getLockColumn() ) {\n          viewPane.scrollLeft = scroll.left;\n        }\n      },\n      cellSizeCache : null,\n      beforeCellSizeChangeHandler : function(event, detail) {\n        // note: 'this' is tableModel!\n        $private.cellSizeCache = null;\n      },\n      getCellSizeCache : function() {\n        var width = $public.$el.clientWidth;\n        var height = $public.$el.clientHeight;\n        var tableModel = $public.model;\n        // observe cache size.\n        tableModel.off('beforecellsizechange', this.beforeCellSizeChangeHandler);\n        tableModel.on('beforecellsizechange', this.beforeCellSizeChangeHandler);\n        //\n        var rowCount = tableModel.getRowCount();\n        var columnCount = tableModel.getColumnCount();\n        var lockRow = $public.getLockRow();\n        var lockColumn = $public.getLockColumn();\n        if (!this.cellSizeCache ||\n            this.cellSizeCache.rowCount != rowCount ||\n            this.cellSizeCache.columnCount != columnCount ||\n            this.cellSizeCache.lockRow != lockRow ||\n            this.cellSizeCache.lockColumn != lockColumn ||\n            this.cellSizeCache.width != width ||\n            this.cellSizeCache.height != height) {\n          var rowPos = [ 0, lockRow, rowCount ];\n          var colPos = [ 0, lockColumn, columnCount ];\n          var cw = colPos.slice(1).map(function() { return 0; });\n          var ch = rowPos.slice(1).map(function() { return 0; });;\n          var idx, count;\n          idx = colPos.shift();\n          cw.forEach(function(_, i) {\n            for (count = colPos.shift(); idx < count; idx += 1) {\n              cw[i] += tableModel.getCellWidthAt(idx);\n            }\n          });\n          idx = rowPos.shift();\n          ch.forEach(function(_, i) {\n            for (count = rowPos.shift(); idx < count; idx += 1) {\n              ch[i] += tableModel.getCellHeightAt(idx);\n            }\n          });\n          var rects = tables.map(function(table) {\n            var rect = { left : 0, top : 0, width : 0, height : 0 };\n            for (var row = 0; row <= table.row; row += 1) {\n              rect[row < table.row ? 'top' : 'height'] += ch[row];\n            }\n            for (var col = 0; col <= table.col; col += 1) {\n              rect[col < table.col? 'left' : 'width'] += cw[col];\n            }\n            rect.width = Math.max(0, Math.min(rect.width, width - rect.left) );\n            rect.height = Math.max(0, Math.min(rect.height, height - rect.top) );\n            return rect;\n          });\n          this.cellSizeCache = {\n            viewWidth : cw[cw.length - 1],\n            viewHeight : ch[ch.length - 1],\n            rects : rects,\n            rowCount : rowCount, columnCount : columnCount,\n            lockRow : lockRow, lockColumn : lockColumn,\n            width : width, height : height\n          };\n        }\n        return this.cellSizeCache;\n      },\n      getRenderParams : function() {\n        var width = $public.$el.clientWidth;\n        var height = $public.$el.clientHeight;\n        var cellSizeCache = this.getCellSizeCache();\n        var viewWidth = cellSizeCache.viewWidth;\n        var viewHeight = cellSizeCache.viewHeight;\n        var maxScr = 1E6;\n        var scrWidth = Math.min(viewWidth, maxScr);\n        var scrHeight = Math.min(viewHeight, maxScr);\n        return {\n          width : width,\n          height : height,\n          rects : cellSizeCache.rects,\n          viewWidth : viewWidth,\n          viewHeight : viewHeight,\n          scrWidth : scrWidth,\n          scrHeight : scrHeight\n        };\n      },\n      getTargetTable : function(row, col) {\n        return tables.filter(function(table) {\n          return table.row == (row < $public.getLockRow()? 0 : 1) &&\n            table.col == (col < $public.getLockColumn()? 0 : 1);\n        })[0];\n      },\n      isEditableAt : function(row, col) {\n        return $public.model.getCellAt(row, col).editable;\n      },\n      move : function(offset) {\n\n        if (editor.cell == null) {\n          return;\n        }\n        var row = editor.cell.row;\n        var col = editor.cell.col;\n        var tableModel = $public.model;\n\n        var beginEditIfEditable = function() {\n          if (this.isEditableAt(row, col) ) {\n            editor.beginEdit(row, col, true);\n            return true;\n          }\n          return false;\n        }.bind(this);\n\n        var rowCount = tableModel.getRowCount();\n        var columnCount = tableModel.getColumnCount();\n\n        if (offset.row == -1 || offset.row == 1) {\n\n          do {\n            do {\n              var lineRowCount = tableModel.getLineRowCountAt(row);\n              var lineRow = tableModel.getLineRowAt(row);\n              var rowOffset = row - lineRow;\n              lineRow += offset.row;\n              if (lineRow < 0) {\n                lineRow = lineRowCount - 1;\n                col -= 1;\n                if (col < 0) {\n                  lineRow = -1;\n                  col = columnCount - 1;\n                }\n              } else if (lineRow >= lineRowCount) {\n                lineRow = 0;\n                col += 1;\n                if (col >= columnCount) {\n                  lineRow = lineRowCount;\n                  col = 0;\n                }\n              }\n              row = rowOffset + lineRow;\n              if (row < 0) {\n                row = rowCount - 1;\n              } else if (row >= rowCount) {\n                row = 0;\n              }\n            } while (tableModel.checkSpaned(row, col) );\n          } while (!beginEditIfEditable() );\n\n        } else if (offset.col == -1 || offset.col == 1) {\n\n          do {\n            do {\n              col += offset.col;\n              if (col < 0) {\n                col = columnCount - 1;\n                row = (row - 1 + rowCount) % rowCount;\n              } else if (col >= columnCount) {\n                col = 0;\n                row = (row + 1) % rowCount;\n              }\n            } while (tableModel.checkSpaned(row, col) );\n          } while (!beginEditIfEditable() );\n        }\n      },\n      renderColumnResizeHandlers : function(renderParams) {\n        var mousedownHandler = function(event) {\n          var mouseupHandler = function(event) {\n            util.$(document).off('mousemove', mousemoveHandler).\n              off('mouseup', mouseupHandler);\n            frame.removeChild(block);\n            util.set(handle.$el.childNodes[0],\n                { style : { display : 'none' } });\n            var deltaX = event.pageX - dragPoint.x;\n            var cellWidth = tableModel.getCellWidthAt(handle.col);\n            tableModel.trigger('beforecellsizechange');\n            tableModel.trigger('cellsizechange', {\n              col : handle.col,\n              cellWidth : Math.max(tableModel.minCellWidth, cellWidth + deltaX) });\n            $public.invalidate();\n          };\n          var mousemoveHandler = function(event) {\n            var deltaX = event.pageX - dragPoint.x;\n            var cellWidth = tableModel.getCellWidthAt(handle.col);\n            deltaX = Math.max(tableModel.minCellWidth, cellWidth + deltaX) - cellWidth;\n            handle.$el.style.left = (handle.left + deltaX) + 'px';\n          };\n          if (event.which != 1) {\n            return;\n          }\n          event.preventDefault();\n          editor.endEdit();\n          var handleIndex = colResizeHandles.map(function(handle) {\n            return handle.$el; } ).indexOf(event.currentTarget);\n          var handle = colResizeHandles[handleIndex];\n          var dragPoint = { x : event.pageX, y : event.pageY };\n          util.set(handle.$el.childNodes[0], { style : { display : '' } });\n          var block = util.createElement('div', {\n            style : {\n              position : 'absolute', left : '0px', top : '0px',\n              backgroundColor : handleStyle.backgroundColor,\n              cursor : handleStyle.cursor,\n              width : (scrollRect.left + scrollRect.width) + 'px',\n              height : (scrollRect.top + scrollRect.height) + 'px'\n            }\n          });\n          frame.appendChild(block);\n          util.$(document).on('mousemove', mousemoveHandler).\n            on('mouseup', mouseupHandler);\n        };\n        var getOrCrt = function() {\n          if (handleIndex < colResizeHandles.length) {\n            return colResizeHandles[handleIndex];\n          }\n          var handle = { $el : util.createElement('div', {\n            style : {\n              position : 'absolute',\n              backgroundColor : handleStyle.backgroundColor,\n              overflow : 'visible', top : '0px',\n              width : (handleStyle.offset * 2 + handleStyle.lineWidth) + 'px',\n              cursor : handleStyle.cursor\n            },\n            on : { mousedown : mousedownHandler }\n          }, [util.createElement('div',{\n            attrs : { 'class' : '${prefix}-v-resize-line' },\n            style : {\n              position : 'absolute',\n              left : handleStyle.offset + 'px', top : '0px', width : '0px',\n              borderLeftWidth : handleStyle.lineWidth + 'px' }\n          })]) };\n          frame.appendChild(handle.$el);\n          colResizeHandles.push(handle);\n          return handle;\n        };\n        var handleStyle = {\n          offset : 3,\n          lineWidth : 1,\n          cursor : 'ew-resize',\n          backgroundColor : 'rgba(0,0,0,0)'\n        };\n        var handleIndex = 0;\n        var tableModel = $public.model;\n        var scrollRect = renderParams.rects[3];\n        tables.forEach(function(table, i) {\n          if (table.row == 0) {\n            var rect = renderParams.rects[i];\n            var tableState = table.tableState;\n            var left = tableState.left + rect.left -\n              handleStyle.offset - handleStyle.lineWidth;\n            var height = rect.height;\n            var clientWidth = scrollRect.left + scrollRect.width;\n            var clientHeight = scrollRect.top + scrollRect.height;\n            for (var col = tableState.minCol; col <= tableState.maxCol;\n                col += 1, handleIndex += 1) {\n              var handle = getOrCrt();\n              left += tableModel.getCellWidthAt(col);\n              if (left > clientWidth) {\n                break;\n              }\n              if (!$public.model.isColumnResizableAt(col) ) {\n                continue;\n              }\n              util.set(handle.$el, { style : { display : '',\n                left : left + 'px', height : height + 'px' } });\n              util.set(handle.$el.childNodes[0], {\n                style : { display : 'none', height : clientHeight + 'px' } });\n              handle.col = col;\n              handle.left = left;\n            }\n          }\n        });\n        for (; handleIndex < colResizeHandles.length; handleIndex += 1) {\n          util.set(colResizeHandles[handleIndex].$el, {\n            style : { display : 'none', left : '0px', height : '0px' } });\n        }\n      },\n      render : function(visibleCell) {\n\n        var renderParams = this.getRenderParams();\n        var cornerRect = renderParams.rects[0];\n\n        util.extend(scr.style, {\n          width : renderParams.scrWidth + 'px',\n          height : renderParams.scrHeight + 'px' });\n        util.extend(viewPane.style, {\n          left : cornerRect.width + 'px', top : cornerRect.height + 'px',\n          width : (renderParams.width - cornerRect.width) + 'px',\n          height : (renderParams.height - cornerRect.height) + 'px' });\n\n        var barWidth = viewPane.offsetWidth - viewPane.clientWidth;\n        var barHeight = viewPane.offsetHeight - viewPane.clientHeight;\n\n        tables.forEach(function(table, i) {\n          var rect = renderParams.rects[i];\n          if (table.col == 1 &&\n              rect.width + barWidth > renderParams.width - rect.left) {\n            rect.width = renderParams.width - rect.left - barWidth;\n          }\n          if (table.row == 1 &&\n              rect.height + barHeight > renderParams.height - rect.top) {\n            rect.height = renderParams.height - rect.top - barHeight;\n          }\n        });\n\n        if (visibleCell) {\n          this.makeVisible(renderParams, visibleCell.row, visibleCell.col);\n        }\n\n        tables.forEach(function(table, i) {\n          var rect = renderParams.rects[i];\n          if (table.col == 1) {\n            table.left = -(renderParams.scrWidth > viewPane.clientWidth?\n                  util.translate(viewPane.scrollLeft,\n                  0, renderParams.scrWidth - viewPane.clientWidth,\n                  cornerRect.width,\n                  cornerRect.width +\n                    renderParams.viewWidth - viewPane.clientWidth,\n                  'table.left') : cornerRect.width);\n          }\n          if (table.row == 1) {\n            table.top = -(renderParams.scrHeight > viewPane.clientHeight?\n                  util.translate(viewPane.scrollTop,\n                  0, renderParams.scrHeight - viewPane.clientHeight,\n                  cornerRect.height,\n                  cornerRect.height +\n                    renderParams.viewHeight - viewPane.clientHeight,\n                  'table.top') : cornerRect.height);\n          }\n          table.model = $public.model;\n          util.extend(table.$el.style, {\n            left : rect.left + 'px', top : rect.top + 'px',\n            width : rect.width + 'px', height : rect.height + 'px' });\n          table.render();\n\n        });\n\n        if (editor.cell != null) {\n          editor.beginEdit(editor.cell.row, editor.cell.col);\n        }\n\n        // lock lines.\n        !function() {\n          while (lockLines.length < 2) {\n            var line = util.createElement('div', {\n              style : { position : 'absolute' } });\n            frame.appendChild(line);\n            lockLines.push(line);\n          }\n          var width = 0;\n          var height = 0;\n          tables.forEach(function(table, i) {\n            var rect = renderParams.rects[i];\n            if (table.row == 0) { width += rect.width; }\n            if (table.col == 0) { height += rect.height; }\n          });\n          // horizontal\n          util.set(lockLines[0], {\n            attrs :{ 'class' : '${prefix}-h-lock-line' },\n            style : {\n              display : $public.getLockRow() == 0? 'none' : '', left : '0px',\n              top : (cornerRect.height - 1) + 'px', width : width + 'px'\n            } });\n          // vertical\n          util.set(lockLines[1], {\n            attrs :{ 'class' : '${prefix}-v-lock-line' },\n            style : {\n              display : $public.getLockColumn() == 0? 'none' : '', top : '0px',\n              left : (cornerRect.width - 1) + 'px', height : height + 'px'\n            } });\n        }();\n\n        // resize handles.\n        if ($public.getLockRow() > 0) {\n          this.renderColumnResizeHandlers(renderParams);\n        }\n\n        $public.trigger('rendered', {\n          tableStates : tables.map(function(table) {\n            return table.tableState;\n          })\n        } );\n      }\n    };\n\n    var editor = {\n      beginEdit : function(row, col, makeVisible) {\n        this.endEdit();\n        if (makeVisible) {\n          $public.render({ row : row, col : col });\n        }\n        this.cell = { row : row, col : col };\n        var target = $private.getTargetTable(row, col);\n        var index = target.tableState.indexById[util.getCellId(row, col)];\n        if (index) {\n          var td = target.tbody.children[index.trIndex].children[index.tdIndex];\n          this.impl = td.renderer.beginEdit($public.model.getCellAt(row, col) );\n          this.impl.focus();\n        }\n      },\n      endEdit : function() {\n        if (this.impl != null) {\n          var endState = this.impl.endEdit();\n          if (endState) {\n            $public.model.trigger('valuechange', {\n              row : this.cell.row,\n              col : this.cell.col,\n              oldValue : endState.oldValue,\n              newValue : endState.newValue\n            });\n          }\n          this.impl = null;\n        }\n        this.cell = null;\n      }\n    };\n\n    var $public = util.extend($c.createUIEventTarget(), {\n      $el : frame,\n      lockRow : 0,\n      lockColumn : 0,\n      getLockRow : function() { return this.lockRow; },\n      getLockColumn : function() { return this.lockColumn; },\n      forEachCells : function(callback) {\n        tables.forEach(function(table) {\n          (table.tbody.children || []).forEach(function(tr) {\n            (tr.children || []).forEach(function(cell) {\n              callback(cell);\n            });\n          });\n        });\n      },\n      editor : editor,\n      model : createDefaultTableModel(),\n      render : function(visibleCell) {\n        $private.render(visibleCell);\n      }\n    });\n\n    return $public;\n  };\n\n  $c.tableEventTypes = [\n    'mousedown', 'mouseover', 'mouseout',\n    'click', 'dblclick', 'contextmenu' ];\n  $c.createTable = createTable;\n\n  // export\n  !function($c) {\n    if (typeof exports === 'object') {\n      module.exports = $c;\n    }\n  }($c);\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - ui\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  var createButton = function(label, action) {\n    return $c.util.createElement('button',{\n      props : { textContent : label },\n      attrs : { 'class' : '${prefix}-button' },\n      on : { mousedown : function(event) {\n        event.preventDefault();\n      }, click : function(event) { action(event); } } });\n  };\n\n  var createDialog = function(children) {\n    var dialog = $c.util.extend($c.createEventTarget(), {\n      $el : $c.util.createElement('div', {\n          attrs : { 'class' : '${prefix}-dialog' },\n          style : { position : 'absolute' }\n      }, children),\n      show : function() {\n        document.body.appendChild(this.$el);\n        this.trigger('beforeshow');\n        $c.util.callLater(function() {\n          $c.util.$(document).on('mousedown', mousedownHandler);\n        });\n      },\n      dispose : function() {\n        if (this.$el) {\n          $c.util.$(document).off('mousedown', mousedownHandler);\n          document.body.removeChild(this.$el);\n          this.$el = null;\n          this.trigger('dispose');\n        }\n      }\n    } );\n    var mousedownHandler = function(event) {\n      if (!$c.util.closest(event.target,\n          { $el : dialog.$el, root : document.body }) ) {\n        dialog.dispose();\n      }\n    };\n    return dialog;\n  };\n\n  var showMenu = function(left, top, menuItems) {\n    var subMenu = null;\n    var menu = $c.util.createElement('div', {\n      attrs : { 'class' : '${prefix}-contextmenu' },\n      style : { position : 'absolute', left : left + 'px', top : top + 'px' } },\n      menuItems.map(function(menuItem) {\n        return $c.util.createElement('div', {\n            attrs : { 'class' : '${prefix}-menuitem ${prefix}-clickable' },\n            props : { textContent : menuItem.label },\n            style : { position : 'relative', whiteSpace : 'nowrap' },\n            on : {\n              mouseover : function(event) {\n                if (subMenu != null) {\n                  subMenu.dispose();\n                  subMenu = null;\n                }\n                if (subMenu == null && menuItem.children) {\n                  subMenu = showMenu(\n                      left + event.target.offsetWidth,\n                      top + event.target.offsetTop,\n                      menuItem.children() );\n                }\n              },\n              mousedown : function(event) {\n                if (menuItem.action) {\n                  menuItem.action(event);\n                }\n              }\n            }\n          } );\n        }) );\n    var dispose = function() {\n      if (menu != null) {\n        document.body.removeChild(menu);\n        menu = null;\n      }\n    };\n    var mousedownHandler = function(event) {\n      $c.util.$(document).off('mousedown', mousedownHandler);\n      dispose();\n    };\n    $c.util.$(document).on('mousedown', mousedownHandler);\n    document.body.appendChild(menu);\n    return { dispose : dispose };\n  };\n\n  $c.ui = {\n    createButton : createButton,\n    createDialog : createDialog,\n    showMenu : showMenu\n  };\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - util\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  var util = function() {\n\n    var parseArguments = function(args) {\n      var children = [];\n      var opts = {};\n      for (var i = 1; i < args.length; i += 1) {\n        var a = args[i];\n        if (typeof a == 'object') {\n          if (typeof a.splice == 'function') {\n            children = a;\n          } else {\n            opts = a;\n          }\n        }\n      }\n      return { children : children, opts : opts };\n    };\n\n    return {\n\n      extend : function() {\n        var o = arguments[0];\n        for (var i = 1; i < arguments.length; i += 1) {\n          var a = arguments[i];\n          for (var k in a) {\n            o[k] = a[k];\n          };\n        }\n        return o;\n      },\n\n      callLater : function(cb) {\n        window.setTimeout(cb, 0);\n      },\n\n      replaceClassNamePrefix : function() {\n        var classNamePrefixRe = /\\$\\{prefix\\}/g;\n        return function(className) {\n          return className.replace(classNamePrefixRe, $c.classNamePrefix);\n        };\n      }(),\n\n      set : function(elm, opts) {\n        if (opts.attrs) {\n          for (var k in opts.attrs) {\n            var v = opts.attrs[k];\n            var t = typeof v;\n            if (t == 'number' || t == 'boolean') {\n              v = '' + v;\n            } else if (t == 'undefined') {\n              v = '';\n            }\n            if (typeof v != 'string') {\n              throw 'bad attr type for ' + k + ':' + (typeof v);\n            }\n            if (k == 'class') {\n              v = this.replaceClassNamePrefix(v);\n            }\n            elm.setAttribute(k, v);\n          }\n        }\n        if (opts.props) {\n          for (var k in opts.props) {\n            elm[k] = opts.props[k];\n          }\n        }\n        if (opts.style) {\n          for (var k in opts.style) {\n            elm.style[k] = opts.style[k] || '';\n          }\n        }\n        if (opts.on) {\n          for (var k in opts.on) {\n            elm.addEventListener(k, opts.on[k]);\n          }\n        }\n        return elm;\n      },\n\n      createElement : function(tagName) {\n        var args = parseArguments(arguments);\n        var elm = document.createElement(tagName);\n        args.children.forEach(function(child) { elm.appendChild(child); });\n        return this.set(elm, args.opts);\n      },\n\n      createSVGElement : function(tagName) {\n        var args = parseArguments(arguments);\n        var elm = document.createElementNS('http://www.w3.org/2000/svg', tagName);\n        args.children.forEach(function(child) { elm.appendChild(child); });\n        return this.set(elm, args.opts);\n      },\n\n      $ : function(elm) {\n        return {\n          on : function(type, listener) {\n            elm.addEventListener(type, listener);\n            return this;\n          },\n          off : function(type, listener) {\n            elm.removeEventListener(type, listener);\n            return this;\n          },\n          addClass : function(className, remove) {\n            className = util.replaceClassNamePrefix(className);\n            var classes = '';\n            (elm.getAttribute('class') || '').split(/\\s+/g).forEach(function(c) {\n              if (c != className) {\n                classes += ' ' + c;\n                return;\n              }\n            } );\n            if (!remove) {\n              classes += ' ' + className;\n            }\n            elm.setAttribute('class', classes);\n            return this;\n          },\n          removeClass : function(className) {\n            return this.addClass(className, true);\n          }\n        };\n      },\n\n      closest : function(elm, opts) {\n        if (typeof opts.className == 'string') {\n          opts.className = this.replaceClassNamePrefix(opts.className);\n        }\n        while (elm != null && elm.nodeType == 1 && elm != opts.root) {\n          if (typeof opts.tagName == 'string' && elm.tagName == opts.tagName) {\n            return elm;\n          } else if (typeof opts.$el == 'object' && elm == opts.$el) {\n            return elm;\n          } else if (typeof opts.className == 'string' &&\n              (elm.getAttribute('class') || '').split(/\\s+/g).indexOf(opts.className)!= -1) {\n            return elm;\n          }\n          elm = elm.parentNode;\n        }\n        return null;\n      },\n\n      indexOf : function(elm) {\n        if (elm == null) {\n          return -1;\n        }\n        return Array.prototype.indexOf.call(elm.parentNode.childNodes, elm);\n      },\n\n      offset : function(elm) {\n        var off = { left : 0, top : 0 };\n        var base = null;\n        for (var e = elm; e.parentNode != null; e = e.parentNode) {\n          if (e.offsetParent != null) {\n            base = e;\n            break;\n          }\n        }\n        if (base != null) {\n          for (var e = base; e.offsetParent != null; e = e.offsetParent) {\n            off.left += e.offsetLeft;\n            off.top += e.offsetTop;\n          }\n        }\n        for (var e = elm; e.parentNode != null &&\n              e != document.body; e = e.parentNode) {\n          off.left -= e.scrollLeft;\n          off.top -= e.scrollTop;\n        }\n        return off;\n      }\n    };\n  }();\n\n  util = util.extend(util, {\n    moveSublist : function(list, from, length, to) {\n      var i1 = list.slice(from, from + length);\n      var i2 = list.slice(0, from).concat(list.slice(from + length) );\n      to = from < to? to - length : to; \n      return i2.slice(0, to).concat(i1).concat(i2.slice(to) );\n    },\n    getCellId : function(row, col) {\n      return row + ':' + col;\n    },\n    translate : function(val1, min1, max1, min2, max2) {\n      var val2 = (val1 - min1) * (max2 - min2) / (max1 - min1) + min2;\n      return Math.max(min2, Math.min(Math.round(val2), max2) );\n    }\n  });\n\n  $c.util = util;\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - default-header-cell-renderer-factory\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  // selector of sort order\n  var createSelector = function() {\n    var rect = $c.util.createElement('span', {\n      attrs : { 'class' : '${prefix}-selector-body' }, \n      style : { display:'inline-block', width:'12px', height : '12px' }\n    });\n    return {\n      $el : rect,\n      selected : false,\n      setSelected : function(selected) {\n        this.selected = selected;\n        $c.util.$(rect).addClass('${prefix}-selected', !selected);\n      },\n      isSelected : function() {\n        return this.selected;\n      }\n    };\n  };\n\n  // filter checkbox\n  var createCheckbox = function() {\n\n    // fix for layout collapse by bootstrap.\n    var antiBsGlobals = {\n        verticalAlign :'baseline',\n        boxSizing : 'content-box',\n        lineHeight : '1' };\n\n    var path = $c.util.createSVGElement('path', { attrs : {\n        'class' : '${prefix}-checkbox-check',\n        d : 'M 2 5 L 5 9 L 10 3'\n      },\n      style : antiBsGlobals });\n    return {\n      $el : $c.util.createElement('span', {\n        attrs : { 'class' : '${prefix}-checkbox-body' }, \n        style : $c.util.extend(antiBsGlobals, { display : 'inline-block',\n          width : '12px', height : '12px' }\n        )}, [\n          $c.util.createSVGElement('svg', {\n            attrs : { width : 12, height : 12 },\n            style : antiBsGlobals }, [ path ])\n        ] ),\n      checked : true,\n      setIncomplete : function(incomplete) {\n        $c.util.$(path).addClass(\n            '${prefix}-checkbox-incomplete-check', !incomplete);\n      },\n      setChecked : function(checked) {\n        this.checked = checked;\n        path.style.display = this.checked? '' : 'none';\n      },\n      isChecked : function() {\n        return this.checked;\n      }\n    };\n  };\n\n  var createFilterDialog = function(opts, cell) {\n\n    var messages = $c.i18n.getMessages();\n    var SortOrder = $c.SortOrder;\n    var labelStyle = { marginLeft : '4px', verticalAlign : 'middle' };\n\n    var createSortButton = function(label) {\n      var selector = createSelector();\n      selector.$el.style.verticalAlign = 'middle';\n      return {\n        selector : selector,\n        $el : $c.util.createElement('div', [\n          selector.$el,\n          $c.util.createElement('span', {\n            style : labelStyle, props : { textContent : label } })\n        ], { attrs : { 'class' : '${prefix}-clickable-op' }, on : {\n          mousedown : function(event) { event.preventDefault(); },\n          click : function() { dialog.trigger('sortclick',\n              { label : label }); }\n        } })\n      };\n    };\n\n    var sortAscButton = createSortButton(messages.SORT_ASC);\n    var sortDescButton = createSortButton(messages.SORT_DESC);\n\n    var filterItems = [ messages.SELECT_ALL ].concat(opts.filterValues).\n      map(function(value, i) {\n        return {\n          index : i,\n          label : (i > 0)? opts.labelFunction(value, cell) : value,\n          value : value,\n          checked : (i > 0)? !opts.rejects[value] : true,\n          color : false\n        };\n      });\n\n    var filterItemList = $c.util.extend($c.createList(), {\n      items : filterItems,\n      getItemAt : function(row) { return this.items[row]; },\n      getItemCount : function() { return this.items.length; },\n      createCell : function() {\n        var checkbox = createCheckbox();\n        var label = $c.util.createElement('span', { style : labelStyle,\n          props : { textContent : 'M' } });\n        checkbox.$el.style.verticalAlign = 'middle';\n        var $public = {\n          row : 0,\n          checkbox : checkbox,\n          setLabel : function(text) {\n            label.textContent = text || messages.SELECT_BLANK;\n            this.$el.setAttribute('title', label.textContent);\n          },\n          $el : $c.util.createElement('div', {\n            attrs : { 'class' : '${prefix}-clickable-op' },\n            on : {\n              mousedown : function(event) { event.preventDefault(); },\n              click : function() {\n                dialog.trigger('filterclick', { index : $public.index });\n              }\n            }\n          }, [ checkbox.$el, label ])\n        };\n        return $public;\n      },\n      renderCell : function(cell, item) {\n        cell.index = item.index;\n        cell.setLabel(item.label);\n        cell.checkbox.setChecked(item.checked);\n        cell.checkbox.setIncomplete(item.incomplete);\n      },\n      height : 0,\n      maxHeight : 150\n    }).on('rendered', function(event, detail) {\n      var height = Math.min(this.maxHeight,\n          this.cellHeight * this.getItemCount() );\n      if (this.height != height) {\n        this.height = height;\n        this.$el.style.height = height + 'px';\n        this.invalidate();\n      }\n    });\n    filterItemList.$el.style.width = '150px';\n    filterItemList.$el.style.height = '0px';\n    filterItemList.invalidate();\n\n    var dialog = $c.util.extend($c.ui.createDialog([\n      // sort\n      sortAscButton.$el,\n      sortDescButton.$el,\n      // search box\n      $c.util.createElement('input', { attrs : { type : 'text' },\n        style : { width : '150px', margin : '4px 0px' },\n        on : { keyup : function(event) {\n          var value = event.currentTarget.value;\n          filterItemList.items = filterItems.filter(function(filterItem) {\n            return !(value && filterItem.label.indexOf(value) == -1);\n          });\n          filterItemList.invalidate();\n        }} }),\n      // filter items\n        filterItemList.$el,\n      // buttons\n      $c.util.createElement('div', { style :\n          { marginTop : '4px', display : 'inline-block', float : 'right' } },\n        [\n          $c.ui.createButton(messages.OK, function() {\n            dialog.dispose();\n            dialog.trigger('applyfilter');\n          }),\n          $c.ui.createButton(messages.CANCEL, function() {\n            dialog.dispose();\n          })\n        ])\n    ]), {\n      sortOrder : opts.sortOrder, rejects : opts.rejects\n    } ).on('sortclick', function(event, detail) {\n\n      if (detail.label == messages.SORT_ASC) {\n        this.sortOrder = this.sortOrder == SortOrder.ASC? null : SortOrder.ASC;\n      }\n      if (detail.label == messages.SORT_DESC) {\n        this.sortOrder = this.sortOrder == SortOrder.DESC? null : SortOrder.DESC;\n      }\n\n      this.trigger('sortchange');\n\n      this.dispose();\n      this.trigger('applysort');\n\n    }).on('sortchange', function() {\n\n      sortAscButton.selector.setSelected(this.sortOrder == SortOrder.ASC);\n      sortDescButton.selector.setSelected(this.sortOrder == SortOrder.DESC);\n\n    } ).on('filterclick', function(event, detail) {\n\n      if (detail.index == 0) {\n        // select all\n        var selectCount = 0;\n        filterItems.forEach(function(filterItem, i) {\n          if (i > 0 && filterItem.checked) {\n            selectCount += 1;\n          }\n        });\n        var selectAll = selectCount != filterItems.length - 1;\n        filterItems.forEach(function(filterItem, i) {\n          if (i > 0) {\n            filterItem.checked = selectAll;\n          }\n        });\n      } else {\n        var filterItem = filterItems[detail.index];\n        filterItem.checked = !filterItem.checked;\n      }\n\n      var rejects = {};\n      filterItems.forEach(function(filterItem, i) {\n        if (i > 0 && !filterItem.checked) {\n          rejects[filterItem.value] = true;\n        }\n      });\n\n      this.rejects = rejects;\n      this.trigger('filterchange');\n\n    }).on('filterchange', function() {\n\n      var rejectCount = 0;\n      for (var value in this.rejects) {\n        rejectCount += 1;\n      }\n\n      // update 'select all' checkbox\n      filterItems[0].checked = rejectCount != filterItems.length - 1;\n      filterItems[0].incomplete = rejectCount != 0;\n\n      filterItemList.invalidate();\n\n    }).trigger('sortchange').trigger('filterchange');\n\n    return dialog;\n  };\n\n  var createFilterButton = function() {\n    return {\n      $el : $c.util.createSVGElement('svg',\n          { style : { position : 'absolute' },\n            attrs : { width : 15, height : 15,\n            'class' : '${prefix}-filter-button ${prefix}-clickable-op' } }),\n      filtered : false,\n      sortOrder : null,\n      setFiltered : function(filtered) {\n        this.filtered = filtered;\n        this.update();\n      },\n      setSortOrder : function(sortOrder) {\n        this.sortOrder = sortOrder;\n        this.update();\n      },\n      update : function() {\n        // remove all children\n        while (this.$el.firstChild) {\n          this.$el.removeChild(this.$el.firstChild);\n        }\n        // outer rect\n        this.$el.appendChild($c.util.createSVGElement('rect', {\n          attrs : { 'class' : '${prefix}-filter-body',\n            x : 0, y : 0, width: 15, height : 15, rx: 3, ry : 3 } }) );\n        // and others.\n        var fillClass = '${prefix}-filter-fill';\n        var strokeClass = '${prefix}-filter-stroke';\n        if (this.filtered) {\n          this.$el.appendChild($c.util.createSVGElement('path', {\n            attrs : { 'class' : fillClass,\n              d : 'M 5 4 L 8 7 L 8 12 L 11 12 L 11 7 L 14 4 Z' } }) );\n          if (this.sortOrder == null) {\n            this.$el.appendChild($c.util.createSVGElement('path', {\n              attrs : { 'class' : fillClass, d: 'M 0 8 L 3 12 L 6 8 Z' } }) );\n          }\n        } else if (this.sortOrder == null) {\n          this.$el.appendChild($c.util.createSVGElement('path', {\n            attrs : { 'class' : fillClass, d: 'M 1 4 L 7 11 L 13 4 Z' } }) );\n        } else {\n          this.$el.appendChild($c.util.createSVGElement('path', {\n            attrs : { 'class' : fillClass, d: 'M 4 5 L 9 11 L 14 5 Z' } }) );\n        }\n        if (this.sortOrder != null) {\n          this.$el.appendChild($c.util.createSVGElement('path', {\n            attrs : { 'class' : strokeClass, d: 'M 3 2 L 3 12'} } ) );\n          if (this.sortOrder == $c.SortOrder.ASC) {\n            this.$el.appendChild($c.util.createSVGElement('path', {\n              attrs : { 'class' : strokeClass, d: 'M 1 5 L 3 2 L 5 5'} }) );\n          } else {\n            this.$el.appendChild($c.util.createSVGElement('path', {\n              attrs : { 'class' : strokeClass, d : 'M 1 9 L 3 12 L 5 9' } }) );\n          }\n        }\n        return this;\n      }\n    }.update();\n  };\n\n  var getFilterValues = function(tableModel, dataField, comparator) {\n    var exists = {};\n    var filterValues = [];\n    var items = tableModel.items;\n    for (var i = 0; i < items.length; i += 1) {\n      var value = items[i][dataField];\n      if (typeof value == 'undefined') {\n        continue;\n      }\n      if (!exists[value]) {\n        if (value !== '') {\n          filterValues.push(value);\n        }\n        exists[value] = true;\n      }\n    }\n    if (comparator) {\n      filterValues.sort(comparator);\n    } else {\n      filterValues.sort();\n    }\n    // blank is always last.\n    if (exists['']) {\n      filterValues.push('');\n    }\n    return filterValues;\n  };\n\n  var createDefaultHeaderCellRendererFactory = function(opts) {\n\n    opts = $c.util.extend($c.createDefaultCellRendererFactoryOpts(), opts || {});\n\n    return function(td) {\n\n      var labelRenderer = $c.createMultiLineLabelRenderer(td.$el);\n\n      var tableModel = td.tableModel;\n      var filterButton = null;\n      var dialog = null;\n\n      var showFilterDialog = function() {\n        var filterContext = tableModel.filterContext;\n        var dataField = filterButton.cell.dataField;\n        var filterValues = getFilterValues(tableModel, dataField,\n            filterButton.cell.comparator);\n        var dialog = createFilterDialog($c.util.extend({\n          sortOrder : filterContext.sort &&\n            filterContext.sort.dataField == dataField?\n            filterContext.sort.sortOrder : null,\n          rejects : filterContext.filters[dataField] || {},\n          filterValues : filterValues\n        }, opts), filterButton.cell).on('applysort', function() {\n          filterContext['.comparator'] = filterButton.cell.comparator;\n          filterContext.sort = this.sortOrder?\n              { dataField : dataField, sortOrder : this.sortOrder } :null;\n          tableModel.trigger('filterchange');\n        }).on('applyfilter', function() {\n          filterContext['.comparator'] = filterButton.cell.comparator;\n          filterContext.filters[dataField] = this.rejects;\n          tableModel.trigger('filterchange');\n        });\n        var off = $c.util.offset(td.$el);\n        dialog.$el.style.left = off.left + 'px',\n        dialog.$el.style.top = (off.top + td.$el.offsetHeight) + 'px';\n        dialog.show();\n        return dialog;\n      };\n\n      return {\n        render : function(cell) {\n\n          labelRenderer.setLabel(cell.value || '\\u00a0');\n\n          if (cell.dataField) {\n\n            if (!filterButton) {\n              filterButton = createFilterButton();\n              $c.util.set(filterButton.$el, {\n                on : { mousedown : function(event) {\n                    event.preventDefault();\n                    if (dialog == null) {\n                      // wait for end edit then show dialog.\n                      $c.util.callLater(function() {\n                        dialog = showFilterDialog();\n                        dialog.on('dispose', function() {\n                          dialog = null;\n                        });\n                      });\n                    } else {\n                      dialog.dispose();\n                    }\n                  }\n                }\n              });\n              td.$el.style.position = 'relative';\n              td.$el.appendChild(filterButton.$el);\n            }\n\n            filterButton.cell = cell;\n            var filterContext = tableModel.filterContext;\n            filterButton.setSortOrder(filterContext.sort &&\n                filterContext.sort.dataField == cell.dataField?\n                    filterContext.sort.sortOrder : null);\n            var rejects = filterContext.filters[cell.dataField] || {};\n            var filtered = false;\n            for (var value in rejects) { filtered = true; break; }\n            filterButton.setFiltered(filtered);\n          }\n          if (filterButton) {\n            filterButton.$el.style.display = cell.dataField? '' : 'none';\n          }\n        },\n        beginEdit : function(cell) {\n          return { focus : function() {}, endEdit : function() {} };\n        },\n        dispose : function() {\n        }\n      };\n    };\n  };\n\n  $c.createDefaultHeaderCellRendererFactory = createDefaultHeaderCellRendererFactory;\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - template-support\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  $c.SortOrder = { ASC : 'asc', DESC : 'desc' };\n\n  var createFilterContext = function() {\n    return { sort : null, filters : {} };\n  };\n\n  var createDefaultOrderedColumnIndices = function(tableModel) {\n    var orderedColumnIndices = [];\n    var columnCount = tableModel.getColumnCount();\n    for (var i = 0; i < columnCount; i += 1) {\n      orderedColumnIndices.push(i);\n    }\n    return orderedColumnIndices;\n  };\n\n  var showColumnEditDialog = function(table) {\n\n    var messages = $c.i18n.getMessages();\n    var tableModel = table.model;\n\n    var columns = function() {\n      var columns = [];\n      var columnCount = tableModel.getColumnCount();\n      for (var col = 0; col <= columnCount;) {\n        if (col == table.lockColumn) {\n          columns.push({ type : 'lockColumn', label : messages.LOCK_COLUMN,\n            hidden : !table.enableLockColumn });\n        }\n        if (col < columnCount) {\n          var cell = tableModel.getCellAt(0, col);\n          var orderedCol = tableModel.getOrderedColumnIndexAt(col);\n          columns.push({ type : 'column', label : tableModel.getValueAt(0, col),\n            hidden : !!tableModel.hiddenColumns[orderedCol],\n            col : orderedCol, colSpan : cell.colSpan });\n          col += cell.colSpan;\n        } else {\n          col += 1;\n        }\n      }\n      return columns;\n    }();\n\n    var columnItems = columns.map(function(column) {\n      return $c.util.createElement('div', {\n          attrs : { 'class' : '${prefix}-listitem ${prefix}-clickable' +\n            (column.type == 'lockColumn'?\n                ' ${prefix}-column-edit-lock-column' : '') },\n          on : { mousedown : function(event) {\n            event.preventDefault();\n            columnItems.forEach(function(elm) {\n              $c.util.$(elm).removeClass('${prefix}-clickable');\n            });\n            var mousemoveHandler = function(event) {\n              if (!started && Math.abs(event.pageY - dragPoint.y) > 4) {\n                started = true;\n              }\n              if (!started) {\n                return;\n              }\n              var listitem = $c.util.closest(event.target,\n                  { className : '${prefix}-listitem', root : dialog.$el });\n              if (!listitem) {\n                return;\n              }\n              indexTo = columnItems.indexOf(listitem);\n              var off = $c.util.offset(listitem);\n              var top = listitem.offsetTop - 2 - listitem.parentNode.scrollTop;\n              if (off.top + listitem.offsetHeight / 2 < event.pageY) {\n                indexTo += 1;\n                top += listitem.offsetHeight;\n              }\n              bar.style.display = '';\n              bar.style.top = top + 'px';\n            };\n            var mouseupHandler = function(event) {\n              $c.util.$(document).off('mousemove', mousemoveHandler).\n                off('mouseup', mouseupHandler);\n              columnItems.forEach(function(elm) {\n                $c.util.$(elm).addClass('${prefix}-clickable');\n              });\n              lastTarget = target;\n              dialog.$el.removeChild(bar);\n              if (indexTo != -1 && indexFrom != indexTo) {\n                var parent = target.parentNode;\n                var ref = columnItems[indexTo];\n                columns = $c.util.moveSublist(columns, indexFrom, 1, indexTo);\n                columnItems = $c.util.moveSublist(columnItems, indexFrom, 1, indexTo);\n                parent.removeChild(target);\n                if (ref) {\n                  parent.insertBefore(target, ref);\n                } else {\n                  parent.appendChild(target);\n                }\n              }\n            };\n            $c.util.$(document).on('mousemove', mousemoveHandler).\n              on('mouseup', mouseupHandler);\n            var target = event.currentTarget;\n            var bar = $c.util.createElement('div', {\n              attrs : { 'class' : '${prefix}-column-edit-bar' },\n              style : { position : 'absolute', left : '0px',\n                display : 'none', width : target.offsetWidth + 'px' }\n            });\n            var indexFrom = columnItems.indexOf(target);\n            var indexTo = -1;\n            var started = false;\n            var dragPoint = { x : event.pageX, y : event.pageY };\n            dialog.$el.appendChild(bar);\n            if (lastTarget != null) {\n              $c.util.$(lastTarget).removeClass('${prefix}-selected');\n            }\n            $c.util.$(target).addClass('${prefix}-selected');\n          }}\n        },[\n        $c.util.createElement('input', {\n          attrs : { type : 'checkbox' },\n          props : { checked : !column.hidden },\n          style : { verticalAlign : 'middle' },\n          on:{ click : function(event) {\n            var target = event.currentTarget;\n            var index = $c.util.indexOf(target.parentNode);\n            columns[index].hidden = !target.checked;\n          }}\n        }),\n        $c.util.createElement('span', {\n          style : { verticalAlign : 'middle' },\n          props : { textContent : column.label }\n        }) ]);\n    });\n\n    var lastTarget = null;\n\n    var dialog =  $c.util.extend($c.ui.createDialog([\n      // columns\n      $c.util.createElement('div',\n        { style : { overflow : 'auto',  height : '200px' } }, columnItems),\n      // buttons\n      $c.util.createElement('div', { style : { float : 'right'} }, [\n        $c.ui.createButton(messages.RESET, function() {\n          dialog.dispose();\n          tableModel.orderedColumnIndices = null;\n          tableModel.hiddenColumns = {};\n          tableModel.trigger('beforecellsizechange');\n          table.lockColumn = table.defaultLockColumn;\n          table.enableLockColumn = true;\n          table.invalidate();\n        }),\n        $c.ui.createButton(messages.APPLY, function() {\n          dialog.dispose();\n          var orderedColumnIndices = [];\n          var hiddenColumns = {};\n          var lockColumn = 0;\n          var enableLockColumn = true;\n          columns.forEach(function(column, col) {\n            if (column.type == 'column') {\n              for (var i = 0; i < column.colSpan; i += 1) {\n                orderedColumnIndices.push(i + column.col);\n              }\n              if (column.hidden) {\n                hiddenColumns[tableModel.getOrderedColumnIndexAt(column.col)] = true;\n              }\n            } else if (column.type == 'lockColumn') {\n              lockColumn = col < columns.length - 1? col : 0;\n              enableLockColumn = !column.hidden;\n            }\n          });\n          tableModel.orderedColumnIndices = orderedColumnIndices;\n          tableModel.hiddenColumns = hiddenColumns;\n          tableModel.trigger('beforecellsizechange');\n          table.lockColumn = lockColumn;\n          table.enableLockColumn = enableLockColumn;\n          table.invalidate();\n        }),\n        $c.ui.createButton(messages.CANCEL, function() {\n          dialog.dispose();\n        })\n      ])\n    ])).on('beforeshow', function() {\n      var left = document.documentElement.scrollLeft +\n        ( (window.innerWidth - this.$el.offsetWidth) / 2 );\n      var top = document.documentElement.scrollTop +\n        ( (window.innerHeight - this.$el.offsetHeight) / 2 );\n      this.$el.style.left = left + 'px';\n      this.$el.style.top = top + 'px';\n    });\n    dialog.show();\n  };\n\n  var enableHover = function(table) {\n\n    var setHoverRowImpl = function(row, hover) {\n      table.forEachCells(function(td) {\n        var itemIndex = table.model.getItemIndexAt(td.row, td.col);\n        if (itemIndex.row != row) {\n          // skip\n          return;\n        }\n        $c.util.$(td.$el).addClass('${prefix}-item-hover', !hover);\n        var cs = null;\n        for (var i = 0; i < td.$el.childNodes.length; i += 1) {\n          var child = td.$el.childNodes[i];\n          /*\n          if (child.tagName == 'INPUT' || child.tagName == 'SELECT') {\n            if (cs == null) {\n              cs = window.getComputedStyle(td.$el, null);\n            }\n            child.style.backgroundColor = cs.backgroundColor;\n          }\n          */\n        }\n      });\n    };\n\n    var setHoverRow = function(hoverRow) {\n      if (table.model.hoverRow != hoverRow) {\n        if (table.model.hoverRow != -1) {\n          setHoverRowImpl(table.model.hoverRow, false);\n        }\n        table.model.hoverRow = hoverRow;\n        if (table.model.hoverRow != -1) {\n          setHoverRowImpl(table.model.hoverRow, true);\n        }\n      }\n    };\n\n    return table.on('mouseover', function(event, detail) {\n        setHoverRow(detail.itemIndex.row);\n      }).\n      on('mouseout', function(event, detail) {\n        setHoverRow(-1);\n      });\n  };\n\n  var enableRowSelect = function(table) {\n    return table.on('click', function(event, detail) {\n      if (detail.itemIndex.row != -1) {\n        var lastSelectedRows = {};\n        for (var k in this.model.selectedRows) {\n          lastSelectedRows[k] = true;\n        }\n        if (this.model.multipleRowsSelectable && detail.originalEvent.ctrlKey) {\n          // ctrl + click : toggle selection\n          if (!this.model.selectedRows[detail.itemIndex.row]) {\n            this.model.selectedRows[detail.itemIndex.row] = true;\n          } else {\n            delete this.model.selectedRows[detail.itemIndex.row];\n          }\n        } else {\n          this.model.selectedRows = {};\n          this.model.selectedRows[detail.itemIndex.row] = true;\n        }\n\n        // check changed.\n        var changed = false;\n        for (var k in this.model.selectedRows) {\n          if (lastSelectedRows[k]) {\n            delete lastSelectedRows[k];\n          } else {\n            changed = true;\n            break;\n          }\n        }\n        for (var k in lastSelectedRows) {\n          changed = true;\n          break;\n        }\n\n        if (changed) {\n          this.invalidate();\n          this.model.trigger('rowselectionchange',\n              { selectedRows : this.model.selectedRows });\n        }\n      }\n    });\n  };\n\n  var fromTemplate = function(template) {\n\n    if (template.thead && !template.tbody) {\n      // set default tbody if not exists.\n      var cloneIfExists = function(src, props) {\n        var dst = {};\n        props.forEach(function(prop) {\n          !src[prop] || (dst[prop] = src[prop]);\n        });\n        return dst;\n      };\n      var props = [ 'colSpan', 'rowSpan', 'dataField' ];\n      template.tbody = template.thead.map(function(tr) {\n        return tr.map(function(headCell) {\n          return cloneIfExists(headCell, props);\n        });\n      });\n    }\n\n    template.thead = template.thead || [[]];\n    template.tbody = template.tbody || [[]];\n\n    template.thead.forEach(function(row) {\n      row.forEach(function(cell) {\n        if (!cell.factory && cell.dataType) {\n          cell.factory = $c.createDefaultHeaderCellRendererFactory(cell);\n        }\n      });\n    });\n    template.tbody.forEach(function(row) {\n      row.forEach(function(cell) {\n        if (!cell.factory && cell.dataType) {\n          cell.factory = $c.createDefaultCellRendererFactory(cell);\n        }\n      });\n    });\n\n    var columnCount = 0;\n    var cellWidth = {};\n    var cellHeight = {};\n    var columnDraggable = {};\n    var columnResizable = {};\n    var styles = function() {\n      var spaned = {};\n      var setSpaned = function(row, col, cell) {\n        for (var r = 0; r < cell.rowSpan; r += 1) {\n          for (var c = 0; c < cell.colSpan; c += 1) {\n            spaned[$c.util.getCellId(row + r, col + c)] = true;\n          }\n        }\n      };\n      return template.thead.concat(template.tbody).map(function(tr, row) {\n        var style = {};\n        var col = 0;\n        var c = 0;\n        while (c < tr.length) {\n          var id = $c.util.getCellId(row, col);\n          if (spaned[id]) {\n            col += 1;\n            continue;\n          }\n          var td = tr[c];\n          var cell = $c.util.extend({ rowSpan : 1, colSpan : 1 }, td);\n          setSpaned(row, col, cell);\n          if (typeof cell.width == 'number') {\n            cellWidth[col] = cell.width;\n          }\n          if (typeof cell.height == 'number') {\n            cellHeight[row] = cell.height;\n          }\n          if (typeof cell.columnDraggable == 'boolean') {\n            columnDraggable[col] = cell.columnDraggable;\n          }\n          if (typeof cell.columnResizable == 'boolean') {\n            columnResizable[col] = cell.columnResizable;\n          }\n          style[col] = td;\n          col += cell.colSpan;\n          c += 1;\n        }\n        columnCount = Math.max(columnCount, col);\n        return style;\n      });\n    }();\n\n    var getCellStyleAt = function(row, col) {\n      if (row < headLength) {\n        return styles[row][col] || {};\n      } else {\n        return styles[headLength + (row - headLength) % bodyLength][col] || {};\n      }\n    };\n\n    var headLength = template.thead.length;\n    var bodyLength = template.tbody.length;\n\n    var table = $c.util.extend($c.createTable(), {\n      lockRow : headLength,\n      lockColumn : template.lockColumn || 0,\n      enableLockColumn : true,\n      defaultLockColumn : 0,\n      getLockColumn : function() {\n        return !this.enableLockColumn? 0 : this.lockColumn;\n      },\n      getContextMenuItems : function() {\n        var messages = $c.i18n.getMessages();\n        var tableModel = table.model;\n        return [\n          { label : messages.RESET_FILTER, action : function() {\n              tableModel.filterContext = createFilterContext();\n              tableModel.filteredItems = null;\n              table.invalidate();\n          }},\n          { label : messages.EDIT_COLUMNS, action : function() {\n              showColumnEditDialog(table);\n          }}\n        ];\n      },\n    }).on('mousedown', function(event, detail) {\n      if (detail.row < this.getLockRow() ) {\n        // on header.\n        this.editor.endEdit();\n        this.invalidate();\n      }\n    }).on('contextmenu', function(event, detail) {\n\n      if (!(detail.row < table.getLockRow() ) ) {\n        return;\n      }\n\n      var menuItems = this.getContextMenuItems();\n      if (!menuItems || menuItems.length == 0) {\n        return;\n      }\n\n      detail.originalEvent.preventDefault();\n      $c.util.callLater(function() {\n        $c.ui.showMenu(\n            detail.originalEvent.pageX,\n            detail.originalEvent.pageY,\n            menuItems);\n      });\n    });\n\n    // keep default value for restore.\n    table.defaultLockColumn = table.lockColumn;\n\n    table.model = $c.util.extend(table.model, {\n      // user defines\n      defaultHeaderCellRendererFactory : $c.createDefaultHeaderCellRendererFactory(),\n      cellWidth : cellWidth,\n      cellHeight : cellHeight,\n      columnDraggable : columnDraggable,\n      columnResizable : columnResizable,\n      orderedColumnIndices : null,\n      filterContext : createFilterContext(),\n      hiddenColumns : {},\n      items : [],\n      filteredItems : null,\n      hoverRow : -1,\n      multipleRowsSelectable : false,\n      selectedRows : {},\n      getItemCount : function() { return (this.filteredItems || this.items).length; },\n      getItemAt : function(row) { return (this.filteredItems || this.items)[row]; },\n      getOrderedColumnIndexAt : function(col) {\n        if (this.orderedColumnIndices == null) {\n          this.orderedColumnIndices = createDefaultOrderedColumnIndices(this);\n        }\n        return this.orderedColumnIndices[col];\n      },\n      getItemIndexAt : function(row, col) {\n        if (row < headLength) {\n          return { row : -1, col : -1 };\n        } else {\n          var orderedCol = this.getOrderedColumnIndexAt(col);\n          var style = getCellStyleAt(row, orderedCol);\n          row -= headLength;\n          return {\n            row : ~~(row / bodyLength),\n            col : style.dataField ||\n              ( (row % bodyLength) * this.getColumnCount() + orderedCol)\n          };\n        }\n      },\n      setValueAt : function(row, col, value) {\n        if (row < headLength) {\n        } else {\n          var itemIndex = this.getItemIndexAt(row, col);\n          this.getItemAt(itemIndex.row)[itemIndex.col] = value;\n        }\n      },\n      // overrides\n      getRowCount : function() { return headLength +\n        bodyLength * this.getItemCount(); },\n      getColumnCount : function() { return columnCount; },\n      getLineRowCountAt : function(row) {\n        return row < headLength? headLength : bodyLength; },\n      getLineRowAt : function(row) {\n        return row < headLength? row : (row - headLength) % bodyLength; },\n      getCellWidthAt : function(col) {\n        var orderedCol = this.getOrderedColumnIndexAt(col);\n        if (this.hiddenColumns[orderedCol]) {\n          return 0;\n        }\n        var v = this.cellWidth[orderedCol];\n        return typeof v == 'number'? v : this.defaultCellWidth;\n      },\n      getCellHeightAt : function(row) {\n        var v = this.cellHeight[row];\n        return typeof v == 'number'? v : this.defaultCellHeight;\n      },\n      isColumnDraggableAt : function(col) {\n        var orderedCol = this.getOrderedColumnIndexAt(col);\n        var v = this.columnDraggable[orderedCol];\n        return typeof v == 'boolean'? v : true;\n      },\n      isColumnResizableAt : function(col) {\n        var orderedCol = this.getOrderedColumnIndexAt(col);\n        var v = this.columnResizable[orderedCol];\n        return typeof v == 'boolean'? v : true;\n      },\n      getCellRendererFactoryAt : function(row, col) {\n        var orderedCol = this.getOrderedColumnIndexAt(col);\n        return getCellStyleAt(row, orderedCol).factory || (row < headLength?\n            this.defaultHeaderCellRendererFactory :\n            this.defaultCellRendererFactory);\n      },\n      getCellStyleAt : function(row, col) {\n        var orderedCol = this.getOrderedColumnIndexAt(col);\n        var style = $c.util.extend({}, getCellStyleAt(row, orderedCol) );\n        style.className = style.className || '';\n        if (row < headLength) {\n          style.className += ' ${prefix}-header';\n          style.editable = false;\n        } else {\n          var itemIndex = this.getItemIndexAt(row, col);\n          row -= headLength;\n          style.className += ' ${prefix}-' +\n            (itemIndex.row % 2 == 0? 'even' : 'odd');\n          if (this.selectedRows[itemIndex.row]) {\n            style.className += ' ${prefix}-item-selected';\n          }\n        }\n        if (style.editable === false) {\n          style.className += ' ${prefix}-readonly';\n        }\n        return style;\n      },\n      getValueAt : function(row, col) {\n        var orderedCol = this.getOrderedColumnIndexAt(col);\n        if (row < headLength) {\n          return getCellStyleAt(row, orderedCol).label || '';\n        } else {\n          var itemIndex = this.getItemIndexAt(row, col);\n          var value = this.getItemAt(itemIndex.row)[itemIndex.col];\n          return typeof value != 'undefined'? value : '';\n        }\n      }\n    }).on('valuechange', function(event, detail) {\n      this.setValueAt(detail.row, detail.col, detail.newValue);\n    }).on('cellsizechange', function(event, detail) {\n      if (typeof detail.col == 'number') {\n        var orderedCol = this.getOrderedColumnIndexAt(detail.col);\n        this.cellWidth[orderedCol] = detail.cellWidth;\n      }\n    }).on('columndragged', function(event, detail) {\n      this.orderedColumnIndices = $c.util.moveSublist(\n          this.orderedColumnIndices, detail.colFrom, detail.colSpan, detail.colTo);\n      if (detail.colFrom < table.lockColumn && table.lockColumn <= detail.colTo) {\n        table.lockColumn -= detail.colSpan;\n      } else if (detail.colTo < table.lockColumn && table.lockColumn <= detail.colFrom) {\n        table.lockColumn += detail.colSpan;\n      }\n    }).on('filterchange', function() {\n\n      // apply filter\n\n      var filters = this.filterContext.filters;\n      var filteredItems = this.items.filter(function(item) {\n        var filtered = false;\n        for (var dataField in filters) {\n          if (filters[dataField][item[dataField]]) {\n            filtered = true;\n            break;\n          }\n        }\n        return !filtered;\n      } );\n\n      var sort = this.filterContext.sort;\n      if (sort) {\n        var order = sort.sortOrder == $c.SortOrder.ASC? 1 : -1;\n        var dataField = sort.dataField;\n        var indexField = '.index';\n        var sortKeyField = '.sortKey';\n        var comparator = this.filterContext['.comparator'];\n        filteredItems.forEach(function(item, i) {\n          item[indexField] = i;\n          item[sortKeyField] = (item[dataField] === null ||\n              typeof item[dataField] == 'undefined')? '' : item[dataField];\n        });\n        if (comparator) {\n          // sort by custom comparator.\n          delete this.filterContext['.comparator'];\n          filteredItems.sort(function(item1, item2) {\n            var result = comparator(item1[sortKeyField], item2[sortKeyField]);\n            if (result != 0) {\n              return order * result;\n            }\n            return order * (item1[indexField] < item2[indexField]? -1 : 1);\n          });\n        } else {\n          filteredItems.sort(function(item1, item2) {\n            if (item1[sortKeyField] != item2[sortKeyField]) {\n              return order * (item1[sortKeyField] < item2[sortKeyField]? -1 : 1);\n            }\n            return order * (item1[indexField] < item2[indexField]? -1 : 1);\n          });\n        }\n        filteredItems.forEach(function(item) {\n          delete item[indexField];\n          delete item[sortKeyField];\n        });\n      }\n      this.filteredItems = filteredItems;\n      table.invalidate();\n    });\n\n    // append itemIndex to events.\n    [ 'valuechange' ].\n    forEach(function(type) {\n      table.model.on(type, function(event, detail) {\n        detail.itemIndex = this.getItemIndexAt(detail.row, detail.col);\n      });\n    });\n    $c.tableEventTypes.forEach(function(type) {\n      table.on(type, function(event, detail) {\n        detail.itemIndex = this.model.getItemIndexAt(detail.row, detail.col);\n      });\n    });\n\n    enableHover(table);\n    enableRowSelect(table);\n\n    return table;\n  };\n\n  $c.fromTemplate = fromTemplate;\n\n}(window.comfortable || (window.comfortable = {}) );\n","//\n// comfortable - vue-support\n//\n// Copyright (c) 2018 Kazuhiko Arase\n//\n// URL: https://github.com/kazuhikoarase/comfortable-js/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n!function($c) {\n\n  'use strict';\n\n  var table = {\n    template: '<div class=\"comfortable\"></div>',\n    props : {\n      template : { 'default' : function() {\n          return {\n            thead : [[ { label : 'col1' },{ label : 'col2' },{ label : 'col3' }]]\n          };\n        } },\n    },\n    methods: {\n      invalidate : function() {\n        this.$options.table.invalidate();\n        return this;\n      },\n      setItems : function(items) {\n        this.$options.table.model.items = items;\n        this.invalidate();\n        return this;\n      },\n      getItems : function() {\n        return this.$options.table.model.items;\n      },\n      getModel : function() {\n        return this.$options.table.model;\n      },\n      getLockRow : function() {\n        return this.$options.table.getLockRow();\n      },\n      getLockColumn : function() {\n        return this.$options.table.getLockColumn();\n      }\n    },\n    mounted : function() {\n\n      var table = $c.fromTemplate(this.template);\n\n      // set default values.\n      table.$el.style.width = '100%';\n      table.$el.style.height = '100%';\n      this.$el.style.width = this.$el.style.width || '400px';\n      this.$el.style.height = this.$el.style.height || '200px';\n\n      // emit events.\n      var emitEventHandler = function(event, detail) {\n        this.$emit(event.type, event, detail);\n      }.bind(this);\n      [\n       'mousedown', 'mouseover', 'mouseout',\n       'click', 'dblclick', 'contextmenu' ].forEach(function(type) {\n         table.on(type, emitEventHandler);\n       });\n      table.model.on('valuechange', emitEventHandler);\n\n      // as a non-reactive property, set to $options.\n      this.$options.table = table;\n      this.$el.appendChild(table.$el);\n\n      this.setItems(this.items? JSON.parse(this.items) : []);\n\n      // observe the size of table.\n      Vue.util.extend(this.$options, {\n        observeInterval : 20, // ms(50fps)\n        alive : true, lastSize : { width : 0, height : 0 }\n      });\n      var observeSize = function() {\n        var size = {\n          width : this.$el.offsetWidth,\n          height : this.$el.offsetHeight\n        };\n        if (size.width != this.$options.lastSize.width ||\n            size.height != this.$options.lastSize.height) {\n          this.$options.lastSize = size;\n          this.invalidate();\n        }\n        if (this.$options.alive) {\n          window.setTimeout(observeSize, this.$options.observeInterval);\n        }\n      }.bind(this);\n      window.setTimeout(observeSize, this.$options.observeInterval);\n    },\n    beforeDestroy : function() {\n      // stop observing\n      this.$options.alive = false;\n    },\n  };\n\n  $c.vueComponents = {\n    table : table\n  };\n\n}(window.comfortable || (window.comfortable = {}) );\n"]}